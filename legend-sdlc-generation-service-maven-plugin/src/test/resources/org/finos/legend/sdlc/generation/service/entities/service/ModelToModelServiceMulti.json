{
  "classifierPath": "meta::legend::service::metamodel::Service",
  "content":{
    "_type": "service",
    "autoActivateUpdates": true,
    "documentation": "",
    "execution": {
      "_type": "pureMultiExecution",
      "executionKey": "env",
      "executionParameters": [
        {
          "key": "QA",
          "mapping": "model::SimpleModelToModelMapping",
          "runtime": {
            "_type": "engineRuntime",
            "connections": [
              {
                "store": {
                  "path": "ModelStore",
                  "type": "STORE"
                },
                "storeConnections": [
                  {
                    "connection": {
                      "_type": "JsonModelConnection",
                      "class": "model::SourcePerson",
                      "element": "ModelStore",
                      "url": "data:application/json,%7B%22firstName%22%3A%22firstName%2073%22%2C%22lastName%22%3A%22lastName%2079%22%2C%22age%22%3A27%7D"
                    },
                    "id": "connection_1"
                  }
                ]
              }
            ],
            "mappings": [
              {
                "path": "model::SimpleModelToModelMapping",
                "type": "MAPPING"
              }
            ]
          }
        },
        {
          "key": "PROD",
          "mapping": "model::SimpleModelToModelMapping",
          "runtime": {
            "_type": "engineRuntime",
            "connections": [
              {
                "store": {
                  "path": "ModelStore",
                  "type": "STORE"
                },
                "storeConnections": [
                  {
                    "connection": {
                      "_type": "JsonModelConnection",
                      "class": "model::SourcePerson",
                      "element": "ModelStore",
                      "url": "data:application/json,%7B%22firstName%22%3A%22firstName%2073%22%2C%22lastName%22%3A%22lastName%2079%22%2C%22age%22%3A27%7D"
                    },
                    "id": "connection_1"
                  }
                ]
              }
            ],
            "mappings": [
              {
                "path": "model::SimpleModelToModelMapping",
                "type": "MAPPING"
              }
            ]
          }
        }
      ],
      "func": {
        "_type": "lambda",
        "body": [
          {
            "_type": "func",
            "function": "serialize",
            "parameters": [
              {
                "_type": "func",
                "function": "graphFetchChecked",
                "parameters": [
                  {
                    "_type": "func",
                    "function": "getAll",
                    "parameters": [
                      {
                        "_type": "class",
                        "fullPath": "model::TargetPerson"
                      }
                    ]
                  },
                  {
                    "_type": "rootGraphFetchTree",
                    "class": "model::TargetPerson",
                    "subTrees": [
                      {
                        "_type": "propertyGraphFetchTree",
                        "parameters": [],
                        "property": "age",
                        "subTrees": []
                      },
                      {
                        "_type": "propertyGraphFetchTree",
                        "parameters": [],
                        "property": "fullName",
                        "subTrees": []
                      }
                    ]
                  }
                ]
              },
              {
                "_type": "rootGraphFetchTree",
                "class": "model::TargetPerson",
                "subTrees": [
                  {
                    "_type": "propertyGraphFetchTree",
                    "parameters": [],
                    "property": "age",
                    "subTrees": []
                  },
                  {
                    "_type": "propertyGraphFetchTree",
                    "parameters": [],
                    "property": "fullName",
                    "subTrees": []
                  }
                ]
              }
            ]
          }
        ],
        "parameters": []
      }
    },
    "name": "ModelToModelServiceMulti",
    "owners": [
      "testOwner"
    ],
    "package": "service",
    "pattern": "/myService/{env}",
    "test": {
      "_type": "multiExecutionTest",
      "tests": [
        {
          "asserts": [
            {
              "assert": {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "func",
                    "function": "equal",
                    "parameters": [
                      {
                        "_type": "func",
                        "function": "cast",
                        "parameters": [
                          {
                            "_type": "property",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "res"
                              }
                            ],
                            "property": "values"
                          },
                          {
                            "_type": "hackedClass",
                            "fullPath": "String"
                          }
                        ]
                      },
                      {
                        "_type": "string",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        },
                        "values": [
                          "{\n  \"defects\": [\n\n  ],\n  \"source\": {\n    \"defects\": [\n\n    ],\n    \"source\": {\n      \"number\": 1,\n      \"record\": \"{\\\"firstName\\\":\\\"firstName 73\\\",\\\"lastName\\\":\\\"lastName 79\\\",\\\"age\\\":27}\"\n    },\n    \"value\": {\n      \"age\": 27,\n      \"lastName\": \"lastName 79\",\n      \"firstName\": \"firstName 73\"\n    }\n  },\n  \"value\": {\n    \"age\": 27,\n    \"fullName\": \"firstName 73 lastName 79\"\n  }\n}"
                        ]
                      }
                    ]
                  }
                ],
                "parameters": [
                  {
                    "_type": "var",
                    "class": "meta::pure::mapping::Result",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "name": "res"
                  }
                ]
              }
            }
          ],
          "data": "{\n  \"firstName\": \"firstName 73\",\n  \"lastName\": \"lastName 79\",\n  \"age\": 27\n}",
          "key": "QA"
        },
        {
          "asserts": [
            {
              "assert": {
                "_type": "lambda",
                "body": [
                  {
                    "_type": "func",
                    "function": "equal",
                    "parameters": [
                      {
                        "_type": "func",
                        "function": "cast",
                        "parameters": [
                          {
                            "_type": "property",
                            "parameters": [
                              {
                                "_type": "var",
                                "name": "res"
                              }
                            ],
                            "property": "values"
                          },
                          {
                            "_type": "hackedClass",
                            "fullPath": "String"
                          }
                        ]
                      },
                      {
                        "_type": "string",
                        "multiplicity": {
                          "lowerBound": 1,
                          "upperBound": 1
                        },
                        "values": [
                          "{\n  \"defects\": [\n\n  ],\n  \"source\": {\n    \"defects\": [\n\n    ],\n    \"source\": {\n      \"number\": 1,\n      \"record\": \"{\\\"firstName\\\":\\\"firstName 73\\\",\\\"lastName\\\":\\\"lastName 79\\\",\\\"age\\\":27}\"\n    },\n    \"value\": {\n      \"age\": 27,\n      \"lastName\": \"lastName 79\",\n      \"firstName\": \"firstName 73\"\n    }\n  },\n  \"value\": {\n    \"age\": 27,\n    \"fullName\": \"firstName 73 lastName 79\"\n  }\n}"
                        ]
                      }
                    ]
                  }
                ],
                "parameters": [
                  {
                    "_type": "var",
                    "class": "meta::pure::mapping::Result",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "name": "res"
                  }
                ]
              }
            }
          ],
          "data": "{\n  \"firstName\": \"firstName 73\",\n  \"lastName\": \"lastName 79\",\n  \"age\": 27\n}",
          "key": "PROD"
        }
      ]
    }
  }
}