{
  "classifierPath": "meta::legend::service::metamodel::Service",
  "content": {
    "_type": "service",
    "autoActivateUpdates": true,
    "documentation": "",
    "execution": {
      "_type": "pureSingleExecution",
      "func": {
        "_type": "lambda",
        "body": [
          {
            "_type": "func",
            "function": "serialize",
            "parameters": [
              {
                "_type": "func",
                "function": "graphFetchChecked",
                "parameters": [
                  {
                    "_type": "func",
                    "function": "getAll",
                    "parameters": [
                      {
                        "_type": "class",
                        "fullPath": "model::TargetPerson",
                        "sourceInformation": {
                          "endColumn": 31,
                          "endLine": 13,
                          "sourceId": "",
                          "startColumn": 13,
                          "startLine": 13
                        }
                      }
                    ],
                    "sourceInformation": {
                      "endColumn": 37,
                      "endLine": 13,
                      "sourceId": "",
                      "startColumn": 32,
                      "startLine": 13
                    }
                  },
                  {
                    "_type": "rootGraphFetchTree",
                    "class": "model::TargetPerson",
                    "sourceInformation": {
                      "endColumn": 78,
                      "endLine": 13,
                      "sourceId": "",
                      "startColumn": 60,
                      "startLine": 13
                    },
                    "subTrees": [
                      {
                        "_type": "propertyGraphFetchTree",
                        "parameters": [],
                        "property": "age",
                        "sourceInformation": {
                          "endColumn": 82,
                          "endLine": 13,
                          "sourceId": "",
                          "startColumn": 80,
                          "startLine": 13
                        },
                        "subTrees": []
                      },
                      {
                        "_type": "propertyGraphFetchTree",
                        "parameters": [],
                        "property": "fullName",
                        "sourceInformation": {
                          "endColumn": 91,
                          "endLine": 13,
                          "sourceId": "",
                          "startColumn": 84,
                          "startLine": 13
                        },
                        "subTrees": []
                      }
                    ]
                  }
                ],
                "sourceInformation": {
                  "endColumn": 56,
                  "endLine": 13,
                  "sourceId": "",
                  "startColumn": 40,
                  "startLine": 13
                }
              },
              {
                "_type": "rootGraphFetchTree",
                "class": "model::TargetPerson",
                "sourceInformation": {
                  "endColumn": 128,
                  "endLine": 13,
                  "sourceId": "",
                  "startColumn": 110,
                  "startLine": 13
                },
                "subTrees": [
                  {
                    "_type": "propertyGraphFetchTree",
                    "parameters": [],
                    "property": "age",
                    "sourceInformation": {
                      "endColumn": 132,
                      "endLine": 13,
                      "sourceId": "",
                      "startColumn": 130,
                      "startLine": 13
                    },
                    "subTrees": []
                  },
                  {
                    "_type": "propertyGraphFetchTree",
                    "parameters": [],
                    "property": "fullName",
                    "sourceInformation": {
                      "endColumn": 141,
                      "endLine": 13,
                      "sourceId": "",
                      "startColumn": 134,
                      "startLine": 13
                    },
                    "subTrees": []
                  }
                ]
              }
            ],
            "sourceInformation": {
              "endColumn": 106,
              "endLine": 13,
              "sourceId": "",
              "startColumn": 98,
              "startLine": 13
            }
          }
        ],
        "parameters": []
      },
      "mapping": "model::SimpleModelToModelMapping",
      "runtime": {
        "_type": "engineRuntime",
        "connections": [
          {
            "store": {
              "path": "ModelStore",
              "type": "STORE"
            },
            "storeConnections": [
              {
                "connection": {
                  "_type": "JsonModelConnection",
                  "class": "model::SourcePerson",
                  "element": "ModelStore",
                  "url": "data:application/json,%7B%22firstName%22%3A%22firstName%2073%22%2C%22lastName%22%3A%22lastName%2079%22%2C%22age%22%3A27%7D"
                },
                "id": "connection_1"
              }
            ]
          }
        ],
        "mappings": [
          {
            "path": "model::SimpleModelToModelMapping",
            "type": "MAPPING"
          }
        ]
      }
    },
    "name": "ModelToModelService",
    "owners": [
      "testOwner"
    ],
    "package": "service",
    "pattern": "/e145c389-d675-4e3a-8fa3-1b2fb73759e1",
    "test": {
      "_type": "singleExecutionTest",
      "asserts": [
        {
          "assert": {
            "_type": "lambda",
            "body": [
              {
                "_type": "func",
                "function": "equal",
                "parameters": [
                  {
                    "_type": "func",
                    "function": "cast",
                    "parameters": [
                      {
                        "_type": "property",
                        "parameters": [
                          {
                            "_type": "var",
                            "name": "res",
                            "sourceInformation": {
                              "endColumn": 52,
                              "endLine": 42,
                              "sourceId": "",
                              "startColumn": 49,
                              "startLine": 42
                            }
                          }
                        ],
                        "property": "values",
                        "sourceInformation": {
                          "endColumn": 59,
                          "endLine": 42,
                          "sourceId": "",
                          "startColumn": 54,
                          "startLine": 42
                        }
                      },
                      {
                        "_type": "hackedClass",
                        "fullPath": "String",
                        "sourceInformation": {
                          "endColumn": 73,
                          "endLine": 42,
                          "sourceId": "",
                          "startColumn": 68,
                          "startLine": 42
                        }
                      }
                    ],
                    "sourceInformation": {
                      "endColumn": 65,
                      "endLine": 42,
                      "sourceId": "",
                      "startColumn": 62,
                      "startLine": 42
                    }
                  },
                  {
                    "_type": "string",
                    "multiplicity": {
                      "lowerBound": 1,
                      "upperBound": 1
                    },
                    "sourceInformation": {
                      "endColumn": 493,
                      "endLine": 42,
                      "sourceId": "",
                      "startColumn": 79,
                      "startLine": 42
                    },
                    "values": [
                      "{\n  \"defects\": [\n\n  ],\n  \"source\": {\n    \"defects\": [\n\n    ],\n    \"source\": {\n      \"number\": 1,\n      \"record\": \"{\\\"firstName\\\":\\\"firstName 73\\\",\\\"lastName\\\":\\\"lastName 79\\\",\\\"age\\\":27}\"\n    },\n    \"value\": {\n      \"age\": 27,\n      \"lastName\": \"lastName 79\",\n      \"firstName\": \"firstName 73\"\n    }\n  },\n  \"value\": {\n    \"age\": 27,\n    \"fullName\": \"firstName 73 lastName 79\"\n  }\n}"
                    ]
                  }
                ],
                "sourceInformation": {
                  "endColumn": 77,
                  "endLine": 42,
                  "sourceId": "",
                  "startColumn": 76,
                  "startLine": 42
                }
              }
            ],
            "parameters": [
              {
                "_type": "var",
                "class": "meta::pure::mapping::Result",
                "multiplicity": {
                  "lowerBound": 1,
                  "upperBound": 1
                },
                "name": "res",
                "sourceInformation": {
                  "endColumn": 44,
                  "endLine": 42,
                  "sourceId": "",
                  "startColumn": 18,
                  "startLine": 42
                }
              }
            ]
          }
        }
      ],
      "data": "{\n  \"firstName\": \"firstName 73\",\n  \"lastName\": \"lastName 79\",\n  \"age\": 27\n}"
    }
  }
}